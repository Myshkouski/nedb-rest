{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"koa-router\"","webpack:///./src/db/index.js","webpack:///./src/server.js","webpack:///external \"koa\"","webpack:///./src/router/index.js","webpack:///external \"koa-bodyparser\"","webpack:///./src/db/nedbWrapper.js","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///external \"events\"","webpack:///external \"nedb-promise\"","webpack:///external \"http-errors\"","webpack:///./src/argv.js","webpack:///external \"commander\"","webpack:///./src/router/collection.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","db","Db","path","argv","process","env","DB_PATH","init","catch","error","console","exit","app","Koa","use","dbRouter","routes","allowedMethods","router","Router","collectionRouter","prefix","_koaBodyparser2","default","strict","enableTypes","onerror","ctx","throw","headers","accept","async","list","index","find","body","kind","data","map","location","url","post","assert","request","inMemory","set","status","MAX_NAME_LENGTH","INDEX_DB_NAME","_createPath","resolve","cwd","this","_path","_create","options","Error","length","_maxNameLength","dbs","_dbs","has","autoload","filename","Nedb","EventEmitter","constructor","super","Map","maxNameLength","_indexDbName","indexDbName","[object Object]","indexDb","dbOptions","forEach","emit","created","Date","now","insert","Promise","reject","fs","unlink","err","remove","delete","_commander","commander","option","parse","params","findOne","Array","isArray","args","collection","method"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"koa-router\");","import Db from './nedbWrapper'\nimport argv from '../argv'\n\nconst db = new Db({\n  path: argv.db || process.env.DB_PATH\n})\n\ndb.init().catch(error => {\n  console.error(error)\n  process.exit(1)\n})\n\nexport default db\n","import Koa from 'koa'\n\nimport dbRouter from './router'\n\nconst app = new Koa()\n\napp.use(dbRouter.routes())\napp.use(dbRouter.allowedMethods())\n\nexport default app\n","module.exports = require(\"koa\");","import Router from 'koa-router'\nimport bodyParser from 'koa-bodyparser'\n\nimport db from '../db'\n\nconst router = new Router()\nconst collectionRouter = require('./collection').prefix('/:name')\n\nrouter\n  .use(bodyParser({\n    strict: true,\n    enableTypes: ['json'],\n    onerror(error, ctx) {\n      ctx.throw(415, {\n        headers: {\n          accept: ['application/json']\n        }\n      })\n    }\n  }))\n  .use(collectionRouter.routes())\n  .use(collectionRouter.allowedMethods())\n  .get('index', '/', async ctx => {\n    const list = await db.index().find({})\n\n    ctx.body = {\n      kind: 'collections',\n      data: list.map(({\n        name\n      }) => ({\n        name,\n        location: ctx.router.url('collection', {\n          name\n        })\n      }))\n    }\n  })\n  .post('/', async ctx => {\n    ctx.assert('name' in ctx.request.body, 400, `Field 'name' should be provided in body`)\n    ctx.assert(!('inMemory' in ctx.request.body) || typeof ctx.request.body.inMemory == 'boolean', 400, `Field 'inMemory' should be boolean`)\n\n    const {\n      name,\n      inMemory\n    } = ctx.request.body\n\n    await db.create({\n      name,\n      inMemory\n    })\n\n    ctx.set('Location', ctx.router.url('collection', {\n      name\n    }))\n\n    ctx.status = 201\n  })\n\nexport default router\n","module.exports = require(\"koa-bodyparser\");","import path from 'path'\nimport fs from 'fs'\nimport EventEmitter from 'events'\nimport Nedb from 'nedb-promise'\nimport Error from 'http-errors'\n\nconst MAX_NAME_LENGTH = 32\nconst INDEX_DB_NAME = '_index'\n\nfunction _createPath(name) {\n  return path.resolve(process.cwd(), this._path || 'var/db/', name + '.db')\n}\n\nfunction _create(options = {}) {\n  const {\n    name,\n    inMemory\n  } = options\n\n  if (typeof name != 'string') {\n    throw new Error(400, 'Database name should be a string')\n  }\n\n  if (!name.length || name.length > this._maxNameLength) {\n    throw new Error(400, `Database name length should contain 1-${ this._maxNameLength } characters`)\n  }\n\n  const dbs = this._dbs\n\n  if (dbs.has(name)) {\n    throw new Error(400, 'Database name already exists')\n  }\n\n  options = {}\n\n  if (inMemory !== true) {\n    options.autoload = true\n    options.filename = _createPath.call(this, name)\n  }\n\n  const db = new Nedb(options)\n\n  dbs.set(name, db)\n\n  return db\n}\n\nexport default class Db extends EventEmitter {\n  constructor(options = {}) {\n    super()\n\n    this._dbs = new Map()\n    this._path = options.path\n    this._maxNameLength = options.maxNameLength || MAX_NAME_LENGTH\n    this._indexDbName = options.indexDbName || INDEX_DB_NAME\n  }\n\n  async init() {\n    const indexDb = _create.call(this, {\n      name: this._indexDbName,\n      inMemory: false\n    })\n\n    const dbOptions = await indexDb.find({})\n\n    dbOptions.forEach(options => {\n      _create.call(this, options)\n    })\n\n    this.emit('init', dbOptions)\n\n    return dbOptions\n  }\n\n  async create(options = {}) {\n    const {\n      name,\n      inMemory\n    } = options\n\n    if (name == this._indexDbName) {\n      throw new Error(400, 'Could not use reserved database name')\n    }\n\n    const db = _create.call(this, options)\n\n    options = {\n      name,\n      inMemory: !!inMemory,\n      created: Date.now()\n    }\n\n    await this._dbs.get(this._indexDbName).insert(options)\n\n    this.emit('created', options)\n\n    return db\n  }\n\n  async remove(name) {\n    if (typeof name != 'string' || !name.length) {\n      throw new Error(400, 'Database name should be a string')\n    }\n\n    const dbs = this._dbs\n\n    if (!dbs.has(name)) {\n      throw new Error(404, 'Database does not exist')\n    }\n\n    const indexDb = await dbs.get(this._indexDbName)\n    const options = await indexDb.find({\n      name\n    })\n\n    if (!options.inMemory) {\n      await new Promise((resolve, reject) => {\n        fs.unlink(_createPath.call(this, name), (err, data) => err ? reject(err) : resolve(data))\n      })\n    }\n\n    await indexDb.remove({\n      name\n    })\n\n    dbs.delete(name)\n\n    this.emit('removed', name)\n  }\n\n  index() {\n    return this._dbs.get(this._indexDbName)\n  }\n\n  get(name) {\n    return this._dbs.get(name)\n  }\n\n  has(name) {\n    return this._dbs.has(name)\n  }\n}\n","module.exports = require(\"path\");","module.exports = require(\"fs\");","module.exports = require(\"events\");","module.exports = require(\"nedb-promise\");","module.exports = require(\"http-errors\");","import commander from 'commander'\n\ncommander.option('--db <dbPath>', 'path to store db files')\n\nexport default commander.parse(process.argv)\n","module.exports = require(\"commander\");","import Router from 'koa-router'\n\nimport db from '../db'\n\nconst router = new Router()\n\nrouter\n  .get('collection', '/', async ctx => {\n    ctx.assert(db.has(ctx.params.name), 404)\n\n    const data = await db.index().findOne({\n      name: ctx.params.name\n    })\n\n    ctx.body = {\n      kind: 'collection',\n      data\n    }\n  })\n  .delete('collection', '/', async ctx => {\n    await db.remove(ctx.params.name)\n\n    ctx.status = 204\n  })\n  .post('method', '/:method', async ctx => {\n    ctx.assert('args' in ctx.request.body, 400, `Field 'args' should be provided in body`)\n    ctx.assert(Array.isArray(ctx.request.body.args), 400, `Field 'args' should be an array of arguments passed to Nedb instance method`)\n    ctx.assert(!!ctx.request.body.args.length, 400, `No arguments provided in 'args' field`)\n\n    const collection = db.get(ctx.params.name)\n\n    ctx.assert(typeof collection[ctx.params.method] == 'function', 400, `Unknown Nedb instance method: '${ ctx.params.method }'`)\n\n    const data = await collection[ctx.params.method](...ctx.request.body.args)\n\n    ctx.body = {\n      kind: 'collection#' + ctx.params.method,\n      data\n    }\n  })\n\nexport default router\n"],"sourceRoot":""}