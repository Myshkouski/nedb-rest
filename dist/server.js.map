{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/db.js","webpack:///external \"koa-router\"","webpack:///./src/router/collection.js","webpack:///external \"commander\"","webpack:///./src/argv.js","webpack:///external \"http-errors\"","webpack:///external \"nedb-promise\"","webpack:///external \"events\"","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///./src/nedbWrapper.js","webpack:///external \"koa-bodyparser\"","webpack:///./src/router/index.js","webpack:///external \"koa-compose\"","webpack:///external \"koa\"","webpack:///./src/server.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","db","Db","path","argv","process","env","DB_PATH","init","catch","error","console","exit","require","router","Router","async","ctx","assert","has","params","data","index","findOne","body","kind","delete","remove","status","post","request","Array","isArray","args","length","collection","method","commander","option","parse","MAX_NAME_LENGTH","INDEX_DB_NAME","_createPath","resolve","cwd","this","_path","_create","options","inMemory","Error","_maxNameLength","dbs","_dbs","autoload","filename","Nedb","set","EventEmitter","constructor","super","Map","maxNameLength","_indexDbName","indexDbName","[object Object]","indexDb","dbOptions","find","forEach","emit","created","Date","now","insert","Promise","reject","fs","unlink","err","collectionRouter","prefix","use","_koaBodyparser2","default","strict","enableTypes","onerror","throw","headers","accept","routes","allowedMethods","list","map","location","url","app","Koa","dbRouter"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","import Db from './nedbWrapper'\r\nimport argv from './argv'\r\n\r\nconst db = new Db({\r\n  path: argv.db || process.env.DB_PATH\r\n})\r\n\r\ndb.init().catch(error => {\r\n  console.error(error)\r\n  process.exit(1)\r\n})\r\n\r\nexport default db\r\n","module.exports = require(\"koa-router\");","import Router from 'koa-router'\r\n\r\nimport db from '../db'\r\n\r\nconst router = new Router()\r\n\r\nrouter\r\n  .get('collection', '/', async ctx => {\r\n    ctx.assert(db.has(ctx.params.name), 404)\r\n\r\n    const data = await db.index().findOne({\r\n      name: ctx.params.name\r\n    })\r\n\r\n    ctx.body = {\r\n      kind: 'collection',\r\n      data\r\n    }\r\n  })\r\n  .delete('collection', '/', async ctx => {\r\n    await db.remove(ctx.params.name)\r\n\r\n    ctx.status = 204\r\n  })\r\n  .post('method', '/:method', async ctx => {\r\n    ctx.assert('args' in ctx.request.body, 400, `Field 'args' should be provided in body`)\r\n    ctx.assert(Array.isArray(ctx.request.body.args), 400, `Field 'args' should be an array of arguments passed to Nedb instance method`)\r\n    ctx.assert(!!ctx.request.body.args.length, 400, `No arguments provided in 'args' field`)\r\n\r\n    const collection = db.get(ctx.params.name)\r\n\r\n    ctx.assert(typeof collection[ctx.params.method] == 'function', 400, `Unknown Nedb instance method: '${ ctx.params.method }'`)\r\n\r\n    const data = await collection[ctx.params.method](...ctx.request.body.args)\r\n\r\n    ctx.body = {\r\n      kind: 'collection#' + ctx.params.method,\r\n      data\r\n    }\r\n  })\r\n\r\nexport default router\r\n","module.exports = require(\"commander\");","import commander from 'commander'\r\n\r\ncommander.option('--db <dbPath>', 'path to store db files')\r\n\r\nexport default commander.parse(process.argv)\r\n","module.exports = require(\"http-errors\");","module.exports = require(\"nedb-promise\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","import path from 'path'\r\nimport fs from 'fs'\r\nimport EventEmitter from 'events'\r\nimport Nedb from 'nedb-promise'\r\nimport Error from 'http-errors'\r\n\r\nconst MAX_NAME_LENGTH = 32\r\nconst INDEX_DB_NAME = '_index'\r\n\r\nfunction _createPath(name) {\r\n  return path.resolve(process.cwd(), this._path || 'var/db/', name + '.db')\r\n}\r\n\r\nfunction _create(options = {}) {\r\n  const {\r\n    name,\r\n    inMemory\r\n  } = options\r\n\r\n  if (typeof name != 'string') {\r\n    throw new Error(400, 'Database name should be a string')\r\n  }\r\n\r\n  if (!name.length || name.length > this._maxNameLength) {\r\n    throw new Error(400, `Database name length should contain 1-${ this._maxNameLength } characters`)\r\n  }\r\n\r\n  const dbs = this._dbs\r\n\r\n  if (dbs.has(name)) {\r\n    throw new Error(400, 'Database name already exists')\r\n  }\r\n\r\n  options = {}\r\n\r\n  if (inMemory !== true) {\r\n    options.autoload = true\r\n    options.filename = _createPath.call(this, name)\r\n  }\r\n\r\n  const db = new Nedb(options)\r\n\r\n  dbs.set(name, db)\r\n\r\n  return db\r\n}\r\n\r\nexport default class Db extends EventEmitter {\r\n  constructor(options = {}) {\r\n    super()\r\n\r\n    this._dbs = new Map()\r\n    this._path = options.path\r\n    this._maxNameLength = options.maxNameLength || MAX_NAME_LENGTH\r\n    this._indexDbName = options.indexDbName || INDEX_DB_NAME\r\n  }\r\n\r\n  async init() {\r\n    const indexDb = _create.call(this, {\r\n      name: this._indexDbName,\r\n      inMemory: false\r\n    })\r\n\r\n    const dbOptions = await indexDb.find({})\r\n\r\n    dbOptions.forEach(options => {\r\n      _create.call(this, options)\r\n    })\r\n\r\n    this.emit('init', dbOptions)\r\n\r\n    return dbOptions\r\n  }\r\n\r\n  async create(options = {}) {\r\n    const {\r\n      name,\r\n      inMemory\r\n    } = options\r\n\r\n    if (name == this._indexDbName) {\r\n      throw new Error(400, 'Could not use reserved database name')\r\n    }\r\n\r\n    const db = _create.call(this, options)\r\n\r\n    options = {\r\n      name,\r\n      inMemory: !!inMemory,\r\n      created: Date.now()\r\n    }\r\n\r\n    await this._dbs.get(this._indexDbName).insert(options)\r\n\r\n    this.emit('created', options)\r\n\r\n    return db\r\n  }\r\n\r\n  async remove(name) {\r\n    if (typeof name != 'string' || !name.length) {\r\n      throw new Error(400, 'Database name should be a string')\r\n    }\r\n\r\n    const dbs = this._dbs\r\n\r\n    if (!dbs.has(name)) {\r\n      throw new Error(404, 'Database does not exist')\r\n    }\r\n\r\n    const indexDb = await dbs.get(this._indexDbName)\r\n    const options = await indexDb.find({\r\n      name\r\n    })\r\n\r\n    if (!options.inMemory) {\r\n      await new Promise((resolve, reject) => {\r\n        fs.unlink(_createPath.call(this, name), (err, data) => err ? reject(err) : resolve(data))\r\n      })\r\n    }\r\n\r\n    await indexDb.remove({\r\n      name\r\n    })\r\n\r\n    dbs.delete(name)\r\n\r\n    this.emit('removed', name)\r\n  }\r\n\r\n  index() {\r\n    return this._dbs.get(this._indexDbName)\r\n  }\r\n\r\n  get(name) {\r\n    return this._dbs.get(name)\r\n  }\r\n\r\n  has(name) {\r\n    return this._dbs.has(name)\r\n  }\r\n}\r\n","module.exports = require(\"koa-bodyparser\");","import Router from 'koa-router'\r\nimport bodyParser from 'koa-bodyparser'\r\n\r\nimport db from '../db'\r\n\r\nconst router = new Router()\r\nconst collectionRouter = require('./collection').prefix('/:name')\r\n\r\nrouter\r\n  .use(bodyParser({\r\n    strict: true,\r\n    enableTypes: ['json'],\r\n    onerror(error, ctx) {\r\n      ctx.throw(415, {\r\n        headers: {\r\n          accept: ['application/json']\r\n        }\r\n      })\r\n    }\r\n  }))\r\n  .use(collectionRouter.routes())\r\n  .use(collectionRouter.allowedMethods())\r\n  .get('index', '/', async ctx => {\r\n    const list = await db.index().find({})\r\n\r\n    ctx.body = {\r\n      kind: 'collections',\r\n      data: list.map(({\r\n        name\r\n      }) => ({\r\n        name,\r\n        location: ctx.router.url('collection', {\r\n          name\r\n        })\r\n      }))\r\n    }\r\n  })\r\n  .post('/', async ctx => {\r\n    ctx.assert('name' in ctx.request.body, 400, `Field 'name' should be provided in body`)\r\n    ctx.assert(!('inMemory' in ctx.request.body) || typeof ctx.request.body.inMemory == 'boolean', 400, `Field 'inMemory' should be boolean`)\r\n\r\n    const {\r\n      name,\r\n      inMemory\r\n    } = ctx.request.body\r\n\r\n    await db.create({\r\n      name,\r\n      inMemory\r\n    })\r\n\r\n    ctx.set('Location', ctx.router.url('collection', {\r\n      name\r\n    }))\r\n\r\n    ctx.status = 201\r\n  })\r\n\r\nexport default router\r\n","module.exports = require(\"koa-compose\");","module.exports = require(\"koa\");","import Koa from 'koa'\r\nimport compose from 'koa-compose'\r\n\r\nimport dbRouter from './router'\r\n\r\nconst app = new Koa()\r\n\r\napp.use(dbRouter.routes())\r\napp.use(dbRouter.allowedMethods())\r\n\r\nexport default app\r\n"],"sourceRoot":""}