{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/argv.js","webpack:///external \"minimist\"","webpack:///external \"http-errors\"","webpack:///external \"nedb-promise\"","webpack:///external \"async/forEach\"","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///./src/dbs.js","webpack:///external \"koa-bodyparser\"","webpack:///external \"koa-router\"","webpack:///./src/router.js","webpack:///external \"koa\"","webpack:///./src/server.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","argv","default","process","slice","require","dbs","Map","createPath","path","resolve","cwd","db","env","DB_PATH","createDb","temp","Error","length","has","options","autoload","filename","Nedb","set","indexDb","dbNames","find","_forEach2","async","error","console","exit","insert","created","Date","now","remove","Promise","reject","fs","unlink","err","data","delete","index","router","Router","use","_koaBodyparser2","strict","enableTypes","onerror","ctx","throw","headers","accept","list","body","kind","map","link","url","assert","params","findOne","post","request","Array","isArray","args","method","tmp","status","app","Koa","dbRouter","routes","allowedMethods"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","import minimist from 'minimist'\n\nconst argv = minimist(process.argv.slice(2))\n\nexport default argv\n","module.exports = require(\"minimist\");","module.exports = require(\"http-errors\");","module.exports = require(\"nedb-promise\");","module.exports = require(\"async/forEach\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","import path from 'path'\nimport fs from 'fs'\nimport asyncForEach from 'async/forEach'\nimport Nedb from 'nedb-promise'\nimport Error from 'http-errors'\n\nimport argv from './argv'\n\nconst MAX_NAME_LENGTH = 32\nconst INDEX_DB_NAME = '_index'\nconst dbs = new Map()\n\nconst createPath = name => path.resolve(process.cwd(), argv.db || process.env.DB_PATH || 'var/db/', `${ name }.db`)\n\nconst createDb = (name, temp) => {\n  if (typeof name != 'string') {\n    throw new Error(400, 'Database name should be a string')\n  }\n\n  if (!name.length || name.length > MAX_NAME_LENGTH) {\n    throw new Error(400, `Database name length should contain 1-${ MAX_NAME_LENGTH } characters`)\n  }\n\n  if (dbs.has(name)) {\n    throw new Error(400, 'Database name already exists')\n  }\n\n  const options = {}\n\n  if (temp !== true) {\n    options.autoload = true\n    options.filename = createPath(name)\n  }\n\n  const db = new Nedb(options)\n\n  dbs.set(name, db)\n\n  return db\n}\n\n(async function init() {\n  try {\n    const indexDb = await createDb(INDEX_DB_NAME, false)\n\n    const dbNames = await indexDb.find({})\n\n    asyncForEach(dbNames, async ({\n      name,\n      temp\n    }) => {\n      await createDb(name, temp)\n    })\n  } catch (error) {\n    console.error(error)\n    process.exit(1)\n  }\n})()\n\nexport const create = async (name, temp) => {\n  if (name == INDEX_DB_NAME) {\n    throw new Error(400, 'Could not use reserved database name')\n  }\n\n  const db = createDb(name, temp)\n\n  await dbs.get(INDEX_DB_NAME).insert({\n    name,\n    temp: !!temp,\n    created: Date.now()\n  })\n\n  return db\n}\n\nexport const remove = async name => {\n  if (typeof name != 'string' || !name.length) {\n    throw new Error(400, 'Database name should be a string')\n  }\n\n  if (!dbs.has(name)) {\n    throw new Error(404, 'Database does not exist')\n  }\n\n  await dbs.get(INDEX_DB_NAME).remove({\n    name\n  })\n\n  await new Promise((resolve, reject) => {\n    fs.unlink(createPath(name), (err, data) => err ? reject(err) : resolve(data))\n  })\n\n  dbs.delete(name)\n}\n\nexport const index = () => dbs.get(INDEX_DB_NAME)\n\nexport const get = name => dbs.get(name)\nexport const has = name => dbs.has(name)\n","module.exports = require(\"koa-bodyparser\");","module.exports = require(\"koa-router\");","import Router from 'koa-router'\nimport bodyParser from 'koa-bodyparser'\n\nimport * as dbs from './dbs'\n\nconst router = new Router()\n\nrouter\n  .use(bodyParser({\n    strict: true,\n    enableTypes: ['json'],\n    onerror(error, ctx) {\n      ctx.throw(415, {\n        headers: {\n          accept: ['application/json']\n        }\n      })\n    }\n  }))\n  .get('/', async ctx => {\n    const list = await dbs.index().find({})\n\n    ctx.body = {\n      kind: 'collections',\n      data: list.map(({\n        name\n      }) => ({\n        name,\n        link: ctx.router.url('db', {\n          name\n        })\n      }))\n    }\n  })\n  .get('db', '/:name', async ctx => {\n    ctx.assert(dbs.has(ctx.params.name), 404)\n\n    const data = await dbs.index().findOne({\n      name: ctx.params.name\n    })\n\n    ctx.body = {\n      kind: 'collection',\n      data\n    }\n  })\n  .post('/:name/:method', async ctx => {\n    ctx.assert('args' in ctx.request.body, 400, `Field 'args' should be provided in body`)\n    ctx.assert(Array.isArray(ctx.request.body.args), 400, `Field 'args' should be an array of arguments passed to Nedb instance method`)\n    ctx.assert(!!ctx.request.body.args.length, 400, `No arguments provided in 'args' field`)\n\n    const db = dbs.get(ctx.params.name)\n\n    ctx.assert(typeof db[ctx.params.method] == 'function', 400, `Unknown Nedb instance method: '${ ctx.params.method }'`)\n\n    const data = await db[ctx.params.method](...ctx.request.body.args)\n\n    ctx.body = {\n      kind: 'collection#' + ctx.params.method,\n      data\n    }\n  })\n  .post('/', async ctx => {\n    ctx.assert('name' in ctx.request.body, 400, `Field 'name' should be provided in body`)\n\n    const {\n      name,\n      tmp\n    } = ctx.request.body\n\n    await dbs.create(name, tmp)\n\n    ctx.status = 201\n  })\n  .delete('/:name', async ctx => {\n    await dbs.remove(ctx.params.name)\n\n    ctx.status = 204\n  })\n\nexport default router\n","module.exports = require(\"koa\");","import Koa from 'koa'\nimport minimist from 'minimist'\n\nimport argv from './argv'\n\nimport dbRouter from './router'\n\nconst app = new Koa()\n\napp.use(dbRouter.routes())\napp.use(dbRouter.allowedMethods())\n\nexport default app\n"],"sourceRoot":""}