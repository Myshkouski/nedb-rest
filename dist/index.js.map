{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./.rootrc","webpack:///./src/index.js","webpack:///./src/routers/dbRouter.js","webpack:///./src/services/dbs.js","webpack:///external \"async\"","webpack:///external \"fs\"","webpack:///external \"http-errors\"","webpack:///external \"koa\"","webpack:///external \"koa-bodyparser\"","webpack:///external \"koa-router\"","webpack:///external \"nedb-promise\"","webpack:///external \"path\""],"names":["app","use","dbRouter","routes","allowedMethods","PORT","HOST","listen","console","log","router","mapDbKeys","name","temp","created","JSON_API_MEDIA_TYPES","JSON_API_MEDIA_TYPES_DEV","isDevContext","ctx","env","defineApiMediaTypes","stringifyApiMediaTypes","arrayOfTypes","filter","type","join","next","error","isDev","status","body","errors","title","details","message","undefined","contentTypes","assert","request","accepts","rawBody","length","is","headers","accept","state","Array","isArray","errorOrErrors","map","id","statusCode","expose","detail","stack","meta","initialError","key","set","bodyParser","strict","enableTypes","extendTypes","json","onerror","throw","get","list","find","included","attributes","links","self","url","params","db","findOne","data","post","method","delete","MAX_NAME_LENGTH","INDEX_DB_NAME","dbs","Map","createPath","path","resolve","paths","var","createDb","has","autoload","filename","init","indexDb","dbNames","async","forEach","process","exit","create","insert","Date","now","remove","Promise","reject","fs","unlink","err","index"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","module.exports = {\"vm\":\"dist/vm.js\",\"var\":\"var/\"}","import Koa from 'koa'\r\n\r\nimport dbRouter from '~/routers/dbRouter'\r\n\r\nconst app = new Koa()\r\n\r\napp.use(dbRouter.routes())\r\napp.use(dbRouter.allowedMethods())\r\n\r\nconst PORT = 27001\r\nconst HOST = '0.0.0.0'\r\n\r\napp.listen(PORT, HOST, () => {\r\n  console.log(`Listening on ${ HOST }:${ PORT }`)\r\n})\r\n\r\nexport default app\r\n","import Router from 'koa-router'\r\nimport bodyParser from 'koa-bodyparser'\r\n\r\nimport * as dbs from '~/services/dbs'\r\n\r\nconst router = new Router()\r\n\r\nconst mapDbKeys = ({\r\n  name,\r\n  temp,\r\n  created\r\n}) => ({\r\n  name,\r\n  temp,\r\n  created\r\n})\r\n\r\nconst JSON_API_MEDIA_TYPES = ['application/vnd.api+json']\r\nconst JSON_API_MEDIA_TYPES_DEV = ['application/json']\r\n\r\nconst isDevContext = ctx => ctx.app.env == 'development'\r\nconst defineApiMediaTypes = ctx => [...JSON_API_MEDIA_TYPES, ...(isDevContext(ctx) ? JSON_API_MEDIA_TYPES_DEV : [])]\r\nconst stringifyApiMediaTypes = arrayOfTypes => arrayOfTypes.filter(type => !!type).join(',')\r\n\r\nrouter\r\n  .use(async (ctx, next) => {\r\n    try {\r\n      await next()\r\n    } catch(error) {\r\n      const isDev = isDevContext(ctx)\r\n      ctx.status = 500\r\n      ctx.body = {\r\n        errors: [\r\n          {\r\n            status: 500,\r\n            title: 'JSON API error',\r\n            details: isDev ? error.message : undefined\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  })\r\n  .use(async (ctx, next) => {\r\n    const isDev = isDevContext(ctx)\r\n    const contentTypes = defineApiMediaTypes(ctx)\r\n\r\n    try {\r\n      ctx.assert(ctx.request.accepts(contentTypes), 406)\r\n      if (ctx.request.rawBody && ctx.request.rawBody.length) {\r\n        ctx.assert(ctx.request.is(...contentTypes), 415, {\r\n          headers: {\r\n            accept: stringifyApiMediaTypes(contentTypes)\r\n          }\r\n        })\r\n      }\r\n\r\n      ctx.state.errors = []\r\n\r\n      await next()\r\n\r\n      if (Array.isArray(ctx.state.errors) && ctx.state.errors.length) {\r\n        throw ctx.state.errors\r\n      }\r\n    } catch (errorOrErrors) {\r\n      const errors = (Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors]).map(({\r\n        id,\r\n        statusCode: status,\r\n        expose,\r\n        message,\r\n        detail,\r\n        stack,\r\n        headers\r\n      }) => ({\r\n        id,\r\n        status,\r\n        title: expose ? message : undefined,\r\n        detail,\r\n        meta: (isDev || headers) ? {\r\n          headers,\r\n          stack: isDev ? stack : undefined,\r\n        } : undefined\r\n      }))\r\n\r\n      const initialError = errors[0]\r\n\r\n      if (errors.length > 1) {\r\n        if (initialError.status >= 500) {\r\n          ctx.status = 500\r\n        } else if (initialError.status >= 400) {\r\n          ctx.status = 400\r\n        }\r\n      } else {\r\n        if ('meta' in initialError && 'headers' in initialError.meta) {\r\n          for (let key in initialError.meta.headers) {\r\n            ctx.set(key, initialError.meta.headers[key])\r\n          }\r\n        }\r\n      }\r\n\r\n      ctx.body = {\r\n        errors\r\n      }\r\n    } finally {\r\n      ctx.type = contentTypes[0]\r\n    }\r\n  })\r\n  .use(bodyParser({\r\n    strict: true,\r\n    enableTypes: ['json'],\r\n    extendTypes: {\r\n      json: [...JSON_API_MEDIA_TYPES]\r\n    },\r\n    onerror(error, ctx) {\r\n      ctx.throw(415, {\r\n        headers: {\r\n          accept: stringifyApiMediaTypes(defineApiMediaTypes(ctx))\r\n        }\r\n      })\r\n    }\r\n  }))\r\n  .get('/', async ctx => {\r\n    const list = await dbs.index().find({})\r\n\r\n    ctx.body = {\r\n      included: list.map(({\r\n        name\r\n      }) => ({\r\n        type: 'database',\r\n        attributes: {\r\n          name\r\n        },\r\n        links: {\r\n          self: ctx.router.url('db', {\r\n            name\r\n          })\r\n        }\r\n      }))\r\n    }\r\n  })\r\n  .get('db', '/:name', async ctx => {\r\n    ctx.assert(dbs.has(ctx.params.name), 404)\r\n\r\n    const db = await dbs.index().findOne({\r\n      name: ctx.params.name\r\n    })\r\n\r\n    ctx.body = {\r\n      data: mapDbKeys(db)\r\n    }\r\n  })\r\n  .post('/:name/:method', async ctx => {\r\n    ctx.assert('data' in ctx.request.body, 400, `Field 'data' should be provided in body`)\r\n    ctx.assert(Array.isArray(ctx.request.body.data), 400, `Field 'data' should be an array of arguments passed to Nedb instance method`)\r\n    ctx.assert(!!ctx.request.body.data.length, 400, `No arguments provided in 'data' field`)\r\n\r\n    const db = dbs.get(ctx.params.name)\r\n\r\n    ctx.assert(typeof db[ctx.params.method] == 'function', 400, `Unknown Nedb instance method: '${ ctx.params.method }'`)\r\n\r\n    const data = await db[ctx.params.method](...ctx.request.body.data)\r\n\r\n    ctx.body = {\r\n      data\r\n    }\r\n  })\r\n  .post('/', async ctx => {\r\n    await dbs.create(ctx.request.body.name, ctx.request.body.temp)\r\n\r\n    ctx.status = 201\r\n  })\r\n  .delete('/:name', async ctx => {\r\n    await dbs.remove(ctx.params.name)\r\n\r\n    ctx.status = 204\r\n  })\r\n\r\nexport default router\r\n","import path from 'path'\r\nimport fs from 'fs'\r\nimport async from 'async'\r\nimport Nedb from 'nedb-promise'\r\nimport Error from 'http-errors'\r\n\r\nimport paths from '~paths'\r\n\r\nconst MAX_NAME_LENGTH = 32\r\nconst INDEX_DB_NAME = '_index'\r\nconst dbs = new Map()\r\n\r\nconst createPath = name => path.resolve(paths.var, `${ name }.db`)\r\n\r\nconst createDb = (name, temp) => {\r\n  if(typeof name != 'string') {\r\n    throw new Error(400, 'Database name should be a string')\r\n  }\r\n\r\n  if(!name.length || name.length > MAX_NAME_LENGTH) {\r\n    throw new Error(400, `Database name length should contain 1-${ MAX_NAME_LENGTH } characters`)\r\n  }\r\n\r\n  if(dbs.has(name)) {\r\n    throw new Error(400, 'Database name already exists')\r\n  }\r\n\r\n  const db = new Nedb({\r\n    autoload: true,\r\n    filename: temp ? undefined : createPath(name)\r\n  })\r\n\r\n  dbs.set(name, db)\r\n\r\n  return db\r\n}\r\n\r\n(async function init() {\r\n  try {\r\n    const indexDb = await createDb(INDEX_DB_NAME, false)\r\n\r\n    const dbNames = await indexDb.find({})\r\n\r\n    async.forEach(dbNames, async ({ name, temp }) => {\r\n      await createDb(name, temp)\r\n    })\r\n  } catch(error) {\r\n    console.error(error)\r\n    process.exit(1)\r\n  }\r\n})()\r\n\r\nexport const create = async (name, temp) => {\r\n  if(name == INDEX_DB_NAME) {\r\n    throw new Error(400, 'Could not use reserved database name')\r\n  }\r\n\r\n  const db = createDb(name, temp)\r\n\r\n  await dbs.get(INDEX_DB_NAME).insert({\r\n    name,\r\n    temp: !!temp,\r\n    created: Date.now()\r\n  })\r\n\r\n  return db\r\n}\r\n\r\nexport const remove = async name => {\r\n  if(typeof name != 'string' || !name.length) {\r\n    throw new Error(400, 'Database name should be a string')\r\n  }\r\n\r\n  if(!dbs.has(name)) {\r\n    throw new Error(404, 'Database does not exist')\r\n  }\r\n\r\n  await dbs.get(INDEX_DB_NAME).remove({ name })\r\n\r\n  await new Promise((resolve, reject) => {\r\n    fs.unlink(createPath(name), (err, data) => err ? reject(err) : resolve(data))\r\n  })\r\n\r\n  dbs.delete(name)\r\n}\r\n\r\nexport const index = () => dbs.get(INDEX_DB_NAME)\r\n\r\nexport const get = name => dbs.get(name)\r\nexport const has = name => dbs.has(name)\r\n","module.exports = require(\"async\");","module.exports = require(\"fs\");","module.exports = require(\"http-errors\");","module.exports = require(\"koa\");","module.exports = require(\"koa-bodyparser\");","module.exports = require(\"koa-router\");","module.exports = require(\"nedb-promise\");","module.exports = require(\"path\");"],"sourceRoot":""}