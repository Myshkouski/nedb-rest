{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./.rootrc","webpack:///./src/dbRouter.js","webpack:///./src/dbs.js","webpack:///./src/index.js","webpack:///external \"async\"","webpack:///external \"fs\"","webpack:///external \"http-errors\"","webpack:///external \"koa\"","webpack:///external \"koa-bodyparser\"","webpack:///external \"koa-router\"","webpack:///external \"nedb-promise\"","webpack:///external \"path\""],"names":["router","mapDbKeys","name","temp","created","use","bodyParser","enableTypes","get","ctx","list","find","body","data","databases","map","assert","params","db","findOne","post","method","request","status","delete","MAX_NAME_LENGTH","indexDbName","dbs","Map","createPath","path","resolve","paths","var","createDb","length","has","autoload","filename","undefined","set","init","indexDb","dbNames","async","forEach","error","console","process","exit","create","insert","Date","now","remove","Promise","reject","fs","unlink","err","index","app","dbRouter","routes","allowedMethods","PORT","HOST","listen","log"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;AAGA;AACA;;;;;;;;;;;;ACzEA,kBAAkB,a;;;;;;;;;;;;;;;;;;ACAlB;AACA;;AAEA;;AAEA,MAAMA,SAAS,IAAI,iDAAJ,EAAf;;AAEA,MAAMC,YAAY,CAAC,EAAEC,IAAF,EAAQC,IAAR,EAAcC,OAAd,EAAD,MAA8B,EAAEF,IAAF,EAAQC,IAAR,EAAcC,OAAd,EAA9B,CAAlB;;AAEAJ,OACGK,GADH,CACO,qDAAAC,CAAW;AACdC,eAAa,CAAC,MAAD;AADC,CAAX,CADP,EAIGC,GAJH,CAIO,GAJP,EAIY,MAAMC,GAAN,IAAa;AACrB,QAAMC,OAAO,MAAM,6CAAYC,IAAZ,CAAiB,EAAjB,CAAnB;;AAEAF,MAAIG,IAAJ,GAAW;AACTC,UAAM;AACJC,iBAAWJ,KAAKK,GAAL,CAASd,SAAT;AADP;AADG,GAAX;AAKD,CAZH,EAaGO,GAbH,CAaO,QAbP,EAaiB,MAAMC,GAAN,IAAa;AAC1BA,MAAIO,MAAJ,CAAW,yCAAQP,IAAIQ,MAAJ,CAAWf,IAAnB,CAAX,EAAqC,GAArC;;AAEA,QAAMgB,KAAK,MAAM,6CAAYC,OAAZ,CAAoB,EAAEjB,MAAMO,IAAIQ,MAAJ,CAAWf,IAAnB,EAApB,CAAjB;;AAEAO,MAAIG,IAAJ,GAAW;AACTC,UAAMZ,UAAUiB,EAAV;AADG,GAAX;AAGD,CArBH,EAsBGE,IAtBH,CAsBQ,gBAtBR,EAsB0B,MAAMX,GAAN,IAAa;AACnC,QAAMS,KAAK,yCAAQT,IAAIQ,MAAJ,CAAWf,IAAnB,CAAX;;AAEAO,MAAIO,MAAJ,CAAW,OAAOE,GAAGT,IAAIQ,MAAJ,CAAWI,MAAd,CAAP,IAAgC,UAA3C,EAAuD,GAAvD,EAA6D,kCAAkCZ,IAAIQ,MAAJ,CAAWI,MAAQ,GAAlH;;AAEA,QAAMR,OAAO,MAAMK,GAAGT,IAAIQ,MAAJ,CAAWI,MAAd,EAAsBZ,IAAIa,OAAJ,CAAYV,IAAlC,CAAnB;;AAEAH,MAAIG,IAAJ,GAAW;AACTC;AADS,GAAX;AAGD,CAhCH,EAiCGO,IAjCH,CAiCQ,GAjCR,EAiCa,MAAMX,GAAN,IAAa;AACtB,QAAM,4CAAWA,IAAIa,OAAJ,CAAYV,IAAZ,CAAiBV,IAA5B,EAAkCO,IAAIa,OAAJ,CAAYV,IAAZ,CAAiBT,IAAnD,CAAN;;AAEAM,MAAIc,MAAJ,GAAa,GAAb;AACD,CArCH,EAsCGC,MAtCH,CAsCU,QAtCV,EAsCoB,MAAMf,GAAN,IAAa;AAC7B,QAAM,4CAAWA,IAAIQ,MAAJ,CAAWf,IAAtB,CAAN;;AAEAO,MAAIc,MAAJ,GAAa,GAAb;AACD,CA1CH;;AA4CA,+DAAevB,MAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMyB,kBAAkB,EAAxB;AACA,MAAMC,cAAc,QAApB;AACA,MAAMC,MAAM,IAAIC,GAAJ,EAAZ;;AAEA,MAAMC,aAAa3B,QAAQ,2CAAA4B,CAAKC,OAAL,CAAa,6CAAAC,CAAMC,GAAnB,EAAyB,GAAG/B,IAAM,KAAlC,CAA3B;;AAEA,MAAMgC,WAAW,CAAChC,IAAD,EAAOC,IAAP,KAAgB;AAC/B,MAAG,OAAOD,IAAP,IAAe,QAAlB,EAA4B;AAC1B,UAAM,IAAI,kDAAJ,CAAU,GAAV,EAAe,kCAAf,CAAN;AACD;;AAED,MAAG,CAACA,KAAKiC,MAAN,IAAgBjC,KAAKiC,MAAL,GAAcV,eAAjC,EAAkD;AAChD,UAAM,IAAI,kDAAJ,CAAU,GAAV,EAAgB,yCAAyCA,eAAiB,EAA1E,CAAN;AACD;;AAED,MAAGE,IAAIS,GAAJ,CAAQlC,IAAR,CAAH,EAAkB;AAChB,UAAM,IAAI,kDAAJ,CAAU,GAAV,EAAe,8BAAf,CAAN;AACD;;AAED,QAAMgB,KAAK,IAAI,mDAAJ,CAAS;AAClBmB,cAAU,IADQ;AAElBC,cAAUnC,OAAOoC,SAAP,GAAmBV,WAAW3B,IAAX;AAFX,GAAT,CAAX;;AAKAyB,MAAIa,GAAJ,CAAQtC,IAAR,EAAcgB,EAAd;;AAEA,SAAOA,EAAP;AACD,CArBD;;AAuBA,CAAC,eAAeuB,IAAf,GAAsB;AACrB,MAAI;AACF,UAAMC,UAAU,MAAMR,SAASR,WAAT,EAAsB,KAAtB,CAAtB;;AAEA,UAAMiB,UAAU,MAAMD,QAAQ/B,IAAR,CAAa,EAAb,CAAtB;;AAEAiC,IAAA,4CAAAA,CAAMC,OAAN,CAAcF,OAAd,EAAuB,OAAO,EAAEzC,IAAF,EAAQC,IAAR,EAAP,KAA0B;AAC/C,YAAM+B,SAAShC,IAAT,EAAeC,IAAf,CAAN;AACD,KAFD;AAGD,GARD,CAQE,OAAM2C,KAAN,EAAa;AACbC,YAAQD,KAAR,CAAcA,KAAd;AACAE,YAAQC,IAAR,CAAa,CAAb;AACD;AACF,CAbD;;AAeO,MAAMC,SAAS,OAAOhD,IAAP,EAAaC,IAAb,KAAsB;AAC1C,MAAGD,QAAQwB,WAAX,EAAwB;AACtB,UAAM,IAAI,kDAAJ,CAAU,GAAV,EAAe,sCAAf,CAAN;AACD;;AAED,QAAMR,KAAKgB,SAAShC,IAAT,EAAeC,IAAf,CAAX;;AAEA,QAAMwB,IAAInB,GAAJ,CAAQkB,WAAR,EAAqByB,MAArB,CAA4B;AAChCjD,QADgC;AAEhCC,UAAM,CAAC,CAACA,IAFwB;AAGhCC,aAASgD,KAAKC,GAAL;AAHuB,GAA5B,CAAN;;AAMA,SAAOnC,EAAP;AACD,CAdM;;AAgBA,MAAMoC,SAAS,MAAMpD,IAAN,IAAc;AAClC,MAAG,OAAOA,IAAP,IAAe,QAAf,IAA2B,CAACA,KAAKiC,MAApC,EAA4C;AAC1C,UAAM,IAAI,kDAAJ,CAAU,GAAV,EAAe,kCAAf,CAAN;AACD;;AAED,MAAG,CAACR,IAAIS,GAAJ,CAAQlC,IAAR,CAAJ,EAAmB;AACjB,UAAM,IAAI,kDAAJ,CAAU,GAAV,EAAe,yBAAf,CAAN;AACD;;AAED,QAAMyB,IAAInB,GAAJ,CAAQkB,WAAR,EAAqB4B,MAArB,CAA4B,EAAEpD,IAAF,EAA5B,CAAN;;AAEA,QAAM,IAAIqD,OAAJ,CAAY,CAACxB,OAAD,EAAUyB,MAAV,KAAqB;AACrCC,IAAA,yCAAAA,CAAGC,MAAH,CAAU7B,WAAW3B,IAAX,CAAV,EAA4ByD,OAAOA,MAAMH,QAAN,GAAiBzB,SAApD;AACD,GAFK,CAAN;;AAIAJ,MAAIH,MAAJ,CAAWtB,IAAX;AACD,CAhBM;;AAkBA,MAAM0D,QAAQ,MAAMjC,IAAInB,GAAJ,CAAQkB,WAAR,CAApB;;AAEA,MAAMlB,MAAMN,QAAQyB,IAAInB,GAAJ,CAAQN,IAAR,CAApB;AACA,MAAMkC,MAAMlC,QAAQyB,IAAIS,GAAJ,CAAQlC,IAAR,CAApB,C;;;;;;;;;;;;;;;;ACzFP;;AAEA;;AAEA,MAAM2D,MAAM,IAAI,0CAAJ,EAAZ;;AAEAA,IAAIxD,GAAJ,CAAQ,iDAAAyD,CAASC,MAAT,EAAR;AACAF,IAAIxD,GAAJ,CAAQ,iDAAAyD,CAASE,cAAT,EAAR;;AAEA,MAAMC,OAAO,KAAb;AACA,MAAMC,OAAO,SAAb;;AAEAL,IAAIM,MAAJ,CAAWF,IAAX,EAAiBC,IAAjB,EAAuB,MAAM;AAC3BnB,UAAQqB,GAAR,CAAa,gBAAgBF,IAAM,IAAID,IAAM,EAA7C;AACD,CAFD;;AAIA,+DAAeJ,GAAf,E;;;;;;;;;;;AChBA,kC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,iC","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","module.exports = {\"var\":\"var/\"}","import Router from 'koa-router'\nimport bodyParser from 'koa-bodyparser'\n\nimport * as dbs from './dbs'\n\nconst router = new Router()\n\nconst mapDbKeys = ({ name, temp, created }) => ({ name, temp, created })\n\nrouter\n  .use(bodyParser({\n    enableTypes: ['json']\n  }))\n  .get('/', async ctx => {\n    const list = await dbs.index().find({})\n\n    ctx.body = {\n      data: {\n        databases: list.map(mapDbKeys)\n      }\n    }\n  })\n  .get('/:name', async ctx => {\n    ctx.assert(dbs.has(ctx.params.name), 404)\n\n    const db = await dbs.index().findOne({ name: ctx.params.name })\n\n    ctx.body = {\n      data: mapDbKeys(db)\n    }\n  })\n  .post('/:name/:method', async ctx => {\n    const db = dbs.get(ctx.params.name)\n\n    ctx.assert(typeof db[ctx.params.method] == 'function', 400, `Unknown nedb instance method: '${ ctx.params.method }'`)\n\n    const data = await db[ctx.params.method](ctx.request.body)\n\n    ctx.body = {\n      data\n    }\n  })\n  .post('/', async ctx => {\n    await dbs.create(ctx.request.body.name, ctx.request.body.temp)\n\n    ctx.status = 201\n  })\n  .delete('/:name', async ctx => {\n    await dbs.remove(ctx.params.name)\n\n    ctx.status = 204\n  })\n\nexport default router\n","import path from 'path'\nimport fs from 'fs'\nimport async from 'async'\nimport Nedb from 'nedb-promise'\nimport Error from 'http-errors'\n\nimport paths from '~paths'\n\nconst MAX_NAME_LENGTH = 32\nconst indexDbName = '_index'\nconst dbs = new Map()\n\nconst createPath = name => path.resolve(paths.var, `${ name }.db`)\n\nconst createDb = (name, temp) => {\n  if(typeof name != 'string') {\n    throw new Error(400, 'Database name should be a string')\n  }\n\n  if(!name.length || name.length > MAX_NAME_LENGTH) {\n    throw new Error(400, `Database name length should contain 1-${ MAX_NAME_LENGTH }`)\n  }\n\n  if(dbs.has(name)) {\n    throw new Error(400, 'Database name already exists')\n  }\n\n  const db = new Nedb({\n    autoload: true,\n    filename: temp ? undefined : createPath(name)\n  })\n\n  dbs.set(name, db)\n\n  return db\n}\n\n(async function init() {\n  try {\n    const indexDb = await createDb(indexDbName, false)\n\n    const dbNames = await indexDb.find({})\n\n    async.forEach(dbNames, async ({ name, temp }) => {\n      await createDb(name, temp)\n    })\n  } catch(error) {\n    console.error(error)\n    process.exit(1)\n  }\n})()\n\nexport const create = async (name, temp) => {\n  if(name == indexDbName) {\n    throw new Error(400, 'Could not use reserved database name')\n  }\n\n  const db = createDb(name, temp)\n\n  await dbs.get(indexDbName).insert({\n    name,\n    temp: !!temp,\n    created: Date.now()\n  })\n\n  return db\n}\n\nexport const remove = async name => {\n  if(typeof name != 'string' || !name.length) {\n    throw new Error(400, 'Database name should be a string')\n  }\n\n  if(!dbs.has(name)) {\n    throw new Error(404, 'Database does not exist')\n  }\n\n  await dbs.get(indexDbName).remove({ name })\n\n  await new Promise((resolve, reject) => {\n    fs.unlink(createPath(name), err => err ? reject() : resolve())\n  })\n\n  dbs.delete(name)\n}\n\nexport const index = () => dbs.get(indexDbName)\n\nexport const get = name => dbs.get(name)\nexport const has = name => dbs.has(name)\n","import Koa from 'koa'\n\nimport dbRouter from './dbRouter'\n\nconst app = new Koa()\n\napp.use(dbRouter.routes())\napp.use(dbRouter.allowedMethods())\n\nconst PORT = 27001\nconst HOST = '0.0.0.0'\n\napp.listen(PORT, HOST, () => {\n  console.log(`Listening on ${ HOST }:${ PORT }`, )\n})\n\nexport default app\n","module.exports = require(\"async\");","module.exports = require(\"fs\");","module.exports = require(\"http-errors\");","module.exports = require(\"koa\");","module.exports = require(\"koa-bodyparser\");","module.exports = require(\"koa-router\");","module.exports = require(\"nedb-promise\");","module.exports = require(\"path\");"],"sourceRoot":""}